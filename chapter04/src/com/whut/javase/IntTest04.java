package com.whut.javase;
/*
 * 1、计算机在任何情况下都只能识别二进制
 *
 * 2、计算机在底层存储数据时，一律存储的都是“二进制的补码形式”
 *    原因：补码形式效率最高
 *
 * 3、二进制有：原码、反码、补码
 *
 * 4、对于一个正数来说：二进制原码、反码、补码都是同一个，完全相同
 * 		byte c = 1;
 * 		对应的二进制原码：00000001
 * 		对应的二进制反码：00000001
 * 		对应的二进制补码：00000001
 *
 *    对于一个负数来说：二进制原码、反码、补码的关系
 *    	byte c = -1;
 *    	对应的二进制原码：10000001
 *    	对应的二进制反码（符号位不变，其他位取反）：11111110
 *    	对应的二进制补码（反码+1）：11111111
 *
 *   注意：二进制最左边的是符号位，为0时表示正数，为1时表示负数
 */
public class IntTest04 {
    public static void main(String[] args) {

        byte b = (byte)150;
        System.out.println(b); // 结果是-106

        /*
         *  int类型的150的二进制码为：00000000 00000000 00000000 10010110
         *  强制转换为byte类型之后的二进制码为：10010110
         *  因为计算机存储的是二进制补码形式，所以：
         *  10010110 ---> 二进制补码
         *  10010101 ---> 二进制反码 (补码转反码，补码-1)
         *  11101010 ---> 二进制原码
         *  11101010对应的数为-106
         */

    }
}
