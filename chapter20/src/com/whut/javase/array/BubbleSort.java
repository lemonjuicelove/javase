package com.whut.javase.array;
/*
* 冒泡排序算法：
*   1、每一次循环结束之后，都要找出最大的数据，放到参与比较的这堆数据的最右边
*   2、核心：拿着左边的数字和右边的数字比较，当左边>右边的时候，交换位置
*
* 原始数据：9 8 10 7 6 0 11
* 第一次循环：(最大的到最右边)
* 9和8比较，9>8,交换位置：8 9 10 7 6 0 11
* 9和10比较，9<10，不用交换位置：8 9 10 7 6 0 11
* 10和7比较，10>7，交换位置：8 9 7 10 6 0 11
* 10和6比较，10>6，交换位置：8 9 7 6 10 0 11
* 10和0比较，10>0，交换位置：8 9 7 6 0 10 11
* 10和11比较，10<11，不用交换位置：8 9 7 6 0 10 11
*
* 第一次循环结束，最大的数据在最右边，剩下需要比较的数据：8 9 7 6 0 10
* 第二次循环：
* 8和9比较，8<9，不用交换位置：8 9 7 6 0 10
* 9和7比较，9>7，交换位置：8 7 9 6 0 10
* 9和6比较，9>6，交换位置：8 7 6 9 0 10
* 9和0比较，9>0，交换位置：8 7 6 0 9 10
* 9和10比较，9<10，不用交换位置：8 7 6 0 9 10
*
* 第二次循环结束，最大的数据在最右边，剩下需要比较的数据：8 7 6 0 9
* 第三次循环：
* 8和7比较，8>7，交换位置：7 8 6 0 9
* 8和6比较，8>6，交换位置：7 6 8 0 9
* 8和0比较，8>0，交换位置：7 6 0 8 9
* 8和9比较，8<9，不用交换位置：7 6 0 8 9
*
* 第三次循环结束，最大的数据在最右边，剩下需要比较的数据：7 6 0 8
* 第四次循环：
* 7和6比较，7>6，交换位置：6 7 0 8
* 7和0比较，7>0，交换位置：6 0 7 8
* 7和8比较，7<8，不用交换位置：6 0 7 8
*
* 第四次循环结束，最大的数据在最右边，剩下需要比较的数据：6 0 7
* 第五次循环：
* 6和0比较，6>0，交换位置：0 6 7
* 6和7比较，6<7，不用交换位置：0 6 7
*
* 第五次循环结束，最大的数据在最右边，剩下需要比较的数据：0 6
* 第六次循环：
* 0和6比较，0<6，不用交换位置：0 6
*
* 循环结束，数据从小到大排列
*/
public class
BubbleSort {

    public static void main(String[] args) {

        int[] array = {9, 8, 10, 7, 6, 0, 11};
        bubble(array);
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
        int[] array2 = {10, -2, 5, 30, -7, 3};
        bubble(array2);
        for (int i = 0; i < array2.length; i++) {
            System.out.print(array2[i] + " ");
        }

    }

    // 冒泡排序算法
    public static void bubble(int[] array){

        int count = 0;
        for (int i = 0; i < array.length-1; i++) { // 控制循环次数
            for (int j = 0; j < array.length-1-i; j++) { // 控制每一次循环中比较次数
                // array.length-1-i 是为了将每一次循环之后最右边的数排除比较范围
                if (array[j] > array[j+1]){ // 判断是否交换位置
                    int temp;
                    temp = array[j];
                    array[j] = array[j+1];
                    array[j+1] = temp;
                    count++;
                }
            }
        }
        System.out.println("交换次数为：" + count);

    }

}
