package com.whut.javase;
/*
 * 	if语句的语法结构以及运行原理
 * 		if语句的语法格式：
 * 			第一种写法：
 * 				if(布尔表达式){
 * 					java语句；
 * 				}
 * 			该语法的执行原理：
 * 				如果布尔表达式的结果为true，则执行大括号中的程序，否则大括号中的代码不执行
 *
 * 			第二种写法：
 * 				if(布尔表达式){
 * 					java语句；
 * 				}else{
 * 					java语句；
 * 				}
 * 			执行原理：如果布尔表达式的结果为true，则执行分支1，分支2不执行。如果布尔表达式的
 * 			结果为false，则执行分支2，分支1不执行
 * 			第二种写法可以保证一定会有一个分支执行
 *
 * 			第三种写法：
 * 				if(布尔表达式1){
 * 					java语句;
 *				}else if(布尔表达式2){
 *					java语句；
 * 				}else if(布尔表达式3){
 * 					java语句；
 * 				}....
 * 			执行原理：先判断布尔表达式1，如果布尔表达式1为true，则执行分支1，然后if语句结束
 * 			当布尔表达式1为false时，会判断布尔表达式2的结果。当布尔表达式2的结果为true，则执行分支2，然后if语句结束
 *
 * 			从上往下依次判断，主要看第一个true发生在哪个分支上。
 * 			第一个true对应的分支执行，只要一个分支执行，整个if语句结束
 *
 * 			第四种写法：
 * 				if(布尔表达式1){
 * 					java语句;
 *				}else if(布尔表达式2){
 *					java语句；
 * 				}else if(布尔表达式3){
 * 					java语句；
 * 				}else{
 * 					java语句；  // 以上条件没有一个成立的，执行这个else里面的语句
 * 				}
 *
 * 		注意：
 * 			1、对于一个if语句来说，在任何情况下只能有一个分支执行。只要有一个分支执行了，
 * 			整个if语句就结束了。
 *
 * 			2、以上4种语法机制中，凡是带有else分支的，一定可以保证会有一个分支执行
 *
 * 			3、当分支中“java语句；”只有一条时，大括号{}可以省略，但为了可读性，不建议省略
 *
 * 			4、控制语句和控制语句之间可以嵌套，但是嵌套的时候最好一个语句一个语句进行分析，不要冗杂在一起分析
 */
public class IfTest01 {
    public static void main(String[] args) {


    }
}
